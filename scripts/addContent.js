// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–≤–µ—Å—Ç–æ–≤ –∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/addContent.js

require('dotenv').config();
const db = require('../database');
const AdminCommands = require('../utils/adminCommands');

async function main() {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    await db.connect();
    await db.initialize();

    // –ü—Ä–∏–º–µ—Ä—ã –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    const newItems = [
      {
        name: '–ö–æ–ª—å—Ü–æ –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏',
        description: '–î–µ–ª–∞–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ –Ω–µ–≤–∏–¥–∏–º—ã–º –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è',
        type: 'misc',
        rarity: 'epic',
        effects: {
          dexterity: 5,
          charisma: -2 // –Ω–µ–≤–∏–¥–∏–º–æ–∫ –Ω–µ –ª—é–±—è—Ç
        },
        requirements: {
          level: 7
        },
        value_gold: 10000,
        is_unique: 0
      },
      {
        name: '–ú–æ–ª–æ—Ç –≥—Ä–æ–º–∞',
        description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ –æ—Ä—É–∂–∏–µ –±–æ–≥–∞ –≥—Ä–æ–º–∞',
        type: 'weapon',
        rarity: 'legendary',
        effects: {
          damage: 30,
          strength: 8,
          thunder_damage: 10
        },
        requirements: {
          level: 10,
          strength: 18
        },
        value_gold: 100000,
        is_unique: 1 // —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤ —á–∞—Ç–µ
      }
    ];

    // –ü—Ä–∏–º–µ—Ä—ã –Ω–æ–≤—ã—Ö –∫–≤–µ—Å—Ç–æ–≤
    const newQuests = [
      {
        title: '–¢—É—Ä–Ω–∏—Ä –≥–ª–∞–¥–∏–∞—Ç–æ—Ä–æ–≤',
        description: '–ê—Ä–µ–Ω–∞ –∂–¥–µ—Ç –Ω–æ–≤—ã—Ö —á–µ–º–ø–∏–æ–Ω–æ–≤! –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–ª—ã!',
        difficulty: 'medium',
        stat_check: 'strength',
        xp_reward: 180,
        gold_reward: 120,
        results: [
          {
            range: '20',
            text: 'üèÜ –í–´ - –ù–û–í–´–ô –ß–ï–ú–ü–ò–û–ù! –¢–æ–ª–ø–∞ —Å–∫–∞–Ω–¥–∏—Ä—É–µ—Ç –≤–∞—à–µ –∏–º—è! –ü–æ–ª—É—á–∏—Ç–µ —Ç–∏—Ç—É–ª –∏ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ –æ—Ä—É–∂–∏–µ!',
            success: true,
            xp_modifier: 3.0,
            gold_modifier: 10.0,
            effects: { charisma: 3, title: '–ß–µ–º–ø–∏–æ–Ω –∞—Ä–µ–Ω—ã', duration: -1 }
          },
          {
            range: '15-19',
            text: '‚öîÔ∏è –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–∞—è –ø–æ–±–µ–¥–∞! –í—ã –≤ —Ñ–∏–Ω–∞–ª–µ —Ç—É—Ä–Ω–∏—Ä–∞!',
            success: true,
            xp_modifier: 2.0,
            gold_modifier: 3.0
          },
          {
            range: '10-14',
            text: 'üí™ –í—ã –ø–æ–±–µ–¥–∏–ª–∏, –Ω–æ –ø–æ–ª—É—á–∏–ª–∏ —Ä–∞–Ω—É (1d6 —É—Ä–æ–Ω–∞).',
            success: true,
            xp_modifier: 1.0,
            gold_modifier: 1.0,
            damage: '1d6'
          },
          {
            range: '5-9',
            text: 'ü©∏ –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –æ–∫–∞–∑–∞–ª—Å—è —Å–∏–ª—å–Ω–µ–µ. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –∏ —Ä–∞–Ω–µ–Ω—ã (2d6 —É—Ä–æ–Ω–∞).',
            success: false,
            xp_modifier: 0.5,
            gold_modifier: 0,
            damage: '2d6'
          },
          {
            range: '2-4',
            text: 'üíÄ –í–∞—Å —É–Ω–µ—Å–ª–∏ –Ω–∞ –Ω–æ—Å–∏–ª–∫–∞—Ö. 3d6 —É—Ä–æ–Ω–∞ –∏ –ø–æ–∑–æ—Ä (-2 –∫ –•–∞—Ä–∏–∑–º–µ –Ω–∞ –Ω–µ–¥–µ–ª—é).',
            success: false,
            xp_modifier: 0.2,
            gold_modifier: 0,
            damage: '3d6',
            effects: { charisma: -2, duration: 168 }
          },
          {
            range: '1',
            text: '‚ò†Ô∏è –§–ê–¢–ê–õ–ò–¢–ò! –í–∞—Å –µ–¥–≤–∞ —Å–ø–∞—Å–ª–∏ –ª–µ–∫–∞—Ä–∏. 4d8 —É—Ä–æ–Ω–∞ –∏ –≤–µ—á–Ω—ã–π —à—Ä–∞–º (-1 –∫ –•–∞—Ä–∏–∑–º–µ –Ω–∞–≤—Å–µ–≥–¥–∞)!',
            success: false,
            xp_modifier: 0.1,
            gold_modifier: 0,
            damage: '4d8',
            effects: { charisma: -1, duration: -1 }
          }
        ]
      }
    ];

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
    console.log('\nüì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');
    for (const item of newItems) {
      try {
        const id = await AdminCommands.addItem(item);
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: ${item.name} (ID: ${id})`);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–≤–µ—Å—Ç—ã
    console.log('\nüìú –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤...');
    for (const quest of newQuests) {
      try {
        const id = await AdminCommands.addQuest(quest);
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: ${quest.title} (ID: ${id})`);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const itemCount = await db.get('SELECT COUNT(*) as count FROM items');
    const questCount = await db.get('SELECT COUNT(*) as count FROM quests');
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î:');
    console.log(`–í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${itemCount.count}`);
    console.log(`–í—Å–µ–≥–æ –∫–≤–µ—Å—Ç–æ–≤: ${questCount.count}`);

    await db.close();
    console.log('\n‚úÖ –ì–æ—Ç–æ–≤–æ!');
    
  } catch (error) {
    console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main();
}

module.exports = { main };