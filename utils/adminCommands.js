// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–≤–µ—Å—Ç–æ–≤ –∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤

const db = require('../database');
const { log } = require('./logger');

class AdminCommands {
  // –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç
  static async addItem(itemData) {
    try {
      const { id } = await db.run(`
        INSERT INTO items (
          name, description, type, rarity, 
          effects, requirements, value_gold, is_unique
        )
        VALUES (?, ?, ?, ?, ?, ?, ?, ?)
      `, [
        itemData.name,
        itemData.description,
        itemData.type,
        itemData.rarity,
        itemData.effects ? JSON.stringify(itemData.effects) : null,
        itemData.requirements ? JSON.stringify(itemData.requirements) : null,
        itemData.value_gold || 0,
        itemData.is_unique || 0
      ]);

      log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: ${itemData.name} (ID: ${id})`, 'success');
      return id;
    } catch (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞: ${error.message}`, 'error');
      throw error;
    }
  }

  // –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç
  static async addQuest(questData) {
    try {
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–≤–µ—Å—Ç
      const { id } = await db.run(`
        INSERT INTO quests (
          title, description, difficulty, 
          stat_check, min_level, xp_reward, gold_reward
        )
        VALUES (?, ?, ?, ?, ?, ?, ?)
      `, [
        questData.title,
        questData.description,
        questData.difficulty,
        questData.stat_check,
        questData.min_level || 1,
        questData.xp_reward,
        questData.gold_reward
      ]);

      // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 6)
      if (!questData.results || questData.results.length !== 6) {
        throw new Error('–ö–≤–µ—Å—Ç –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ä–æ–≤–Ω–æ 6 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!');
      }

      for (const result of questData.results) {
        await db.run(`
          INSERT INTO quest_results (
            quest_id, roll_range, result_text, is_success,
            xp_modifier, gold_modifier, effects, damage
          )
          VALUES (?, ?, ?, ?, ?, ?, ?, ?)
        `, [
          id,
          result.range,
          result.text,
          result.success ? 1 : 0,
          result.xp_modifier || 1.0,
          result.gold_modifier || 1.0,
          result.effects ? JSON.stringify(result.effects) : null,
          result.damage || null
        ]);
      }

      log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∫–≤–µ—Å—Ç: ${questData.title} (ID: ${id})`, 'success');
      return id;
    } catch (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞: ${error.message}`, 'error');
      throw error;
    }
  }

  // –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  static getExamples() {
    return {
      item: {
        name: '–ú–µ—á –ø–ª–∞–º–µ–Ω–∏',
        description: '–ö–ª–∏–Ω–æ–∫, –ø—ã–ª–∞—é—â–∏–π –≤–µ—á–Ω—ã–º –æ–≥–Ω–µ–º',
        type: 'weapon', // weapon, armor, consumable, misc, artifact
        rarity: 'rare', // common, uncommon, rare, epic, legendary
        effects: {
          damage: 12,
          fire_damage: 5,
          strength: 2
        },
        requirements: {
          level: 5,
          strength: 14
        },
        value_gold: 2500,
        is_unique: 0
      },
      quest: {
        title: '–ü—Ä–∏–∑—Ä–∞–∫ –≤ –∑–∞–º–∫–µ',
        description: '–°—Ç–∞—Ä—ã–π –∑–∞–º–æ–∫ –Ω–∞—Å–µ–ª–µ–Ω –ø—Ä–∏–∑—Ä–∞–∫–∞–º–∏. –ò–∑–≥–æ–Ω–∏—Ç–µ –∏—Ö!',
        difficulty: 'medium', // easy, medium, hard, epic, legendary
        stat_check: 'wisdom', // strength, dexterity, intelligence, wisdom, constitution, charisma
        min_level: 3, // –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è
        xp_reward: 200,
        gold_reward: 150,
        results: [
          {
            range: '20',
            text: '‚ú® –í—ã –∏–∑–≥–Ω–∞–ª–∏ –≤—Å–µ—Ö –ø—Ä–∏–∑—Ä–∞–∫–æ–≤ –∏ –Ω–∞—à–ª–∏ —Ç–∞–π–Ω—É—é —Å–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü—É!',
            success: true,
            xp_modifier: 2.0,
            gold_modifier: 5.0
          },
          {
            range: '15-19',
            text: 'üëª –ü—Ä–∏–∑—Ä–∞–∫–∏ –∏–∑–≥–Ω–∞–Ω—ã! –ì—Ä–∞—Ñ —â–µ–¥—Ä–æ –Ω–∞–≥—Ä–∞–¥–∏–ª –≤–∞—Å.',
            success: true,
            xp_modifier: 1.5,
            gold_modifier: 2.0
          },
          {
            range: '10-14',
            text: '‚úùÔ∏è –í—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å, –Ω–æ –æ–¥–∏–Ω –ø—Ä–∏–∑—Ä–∞–∫ –≤–∞—Å –ø—Ä–æ–∫–ª—è–ª (-1 –∫ –ú—É–¥—Ä–æ—Å—Ç–∏ –Ω–∞ –¥–µ–Ω—å).',
            success: true,
            xp_modifier: 1.0,
            gold_modifier: 1.0,
            effects: { wisdom: -1, duration: 24 }
          },
          {
            range: '5-9',
            text: 'üò± –ü—Ä–∏–∑—Ä–∞–∫–∏ –Ω–∞–ø–∞–ª–∏! –í—ã –±–µ–∂–∞–ª–∏, –ø–æ—Ç–µ—Ä—è–≤ 2d6 HP.',
            success: false,
            xp_modifier: 0.5,
            gold_modifier: 0,
            damage: '2d6'
          },
          {
            range: '2-4',
            text: 'üíÄ –í–∞—Å –æ–¥–µ—Ä–∂–∞–ª –∑–ª–æ–π –¥—É—Ö! –ü–æ—Ç–µ—Ä—è–Ω–æ 3d6 HP –∏ -2 –∫–æ –≤—Å–µ–º –±—Ä–æ—Å–∫–∞–º –Ω–∞ 3 –¥–Ω—è.',
            success: false,
            xp_modifier: 0.2,
            gold_modifier: 0,
            damage: '3d6',
            effects: { all_stats: -2, duration: 72 }
          },
          {
            range: '1',
            text: '‚ò†Ô∏è –í–´ –°–¢–ê–õ–ò –ü–†–ò–ó–†–ê–ö–û–ú! –í–æ—Å–∫—Ä–µ—à–µ–Ω–∏–µ —Å—Ç–æ–∏—Ç –≤—Å–µ–≥–æ –≤–∞—à–µ–≥–æ –∑–æ–ª–æ—Ç–∞ –∏ -5 –∫ –¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—é –Ω–∞–≤—Å–µ–≥–¥–∞!',
            success: false,
            xp_modifier: 0.1,
            gold_modifier: -1.0,
            effects: { constitution: -5, duration: -1 }
          }
        ]
      }
    };
  }
}

module.exports = AdminCommands;