const BaseMigration = require("../migration-system/BaseMigration");
const { logDatabase } = require("../../utils/logger");

class DefaultQuestsMigration extends BaseMigration {
  constructor() {
    super(3, "default_quests");
  }
  async up(db) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–≤–µ—Å—Ç—ã
    const existingQuests = await db.get("SELECT COUNT(*) as count FROM quests");
    if (existingQuests.count > 0) {
      logDatabase("–ö–≤–µ—Å—Ç—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º");
      return;
    }

    const quests = [
      // –õ–µ–≥–∫–∏–µ –∫–≤–µ—Å—Ç—ã
      {
        title: "–ö—Ä—ã—Å—ã –≤ –ø–æ–¥–≤–∞–ª–µ",
        description: "–¢—Ä–∞–∫—Ç–∏—Ä—â–∏–∫ –ø—Ä–æ—Å–∏—Ç –∏–∑–±–∞–≤–∏—Ç—å –ø–æ–¥–≤–∞–ª –æ—Ç –∫—Ä—ã—Å. –ö–∏–Ω—å—Ç–µ 1d20!",
        difficulty: "easy",
        stat_check: "strength",
        xp_reward: 50,
        gold_reward: 20,
        results: [
          {
            range: "20",
            text: "üèÜ –í—ã —É–Ω–∏—á—Ç–æ–∂–∏–ª–∏ –∫–æ—Ä–æ–ª—è-–∫—Ä—ã—Å—É! –¢—Ä–∞–∫—Ç–∏—Ä—â–∏–∫ –¥–∞—Ä–∏—Ç –≤–∞–º –∏–º–µ–Ω–Ω–æ–µ –æ—Ä—É–∂–∏–µ –∏ –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω—É—é —Å–∫–∏–¥–∫—É!",
            success: true,
            xp_mod: 2.0,
            gold_mod: 3.0,
          },
          {
            range: "15-19",
            text: "üí™ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ö—Ä—ã—Å—ã —Ä–∞–∑–±–µ–∂–∞–ª–∏—Å—å, –ø–æ–¥–≤–∞–ª —á–∏—Å—Ç. –¢—Ä–∞–∫—Ç–∏—Ä—â–∏–∫ –¥–æ–≤–æ–ª–µ–Ω!",
            success: true,
            xp_mod: 1.5,
            gold_mod: 1.5,
          },
          {
            range: "10-14",
            text: "‚úÖ –í—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å, –Ω–æ –ø–æ–∫—É—Å–∞–Ω—ã. –ö—Ä—ã—Å—ã —É—à–ª–∏, –Ω–æ –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ 1d4 HP.",
            success: true,
            xp_mod: 1.0,
            gold_mod: 1.0,
            damage: "1d4",
          },
          {
            range: "5-9",
            text: "üò∞ –ö—Ä—ã—Å—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏! –í—ã —É–±–µ–∂–∞–ª–∏, –ø–æ—Ç–µ—Ä—è–≤ 1d6 HP.",
            success: false,
            xp_mod: 0.5,
            gold_mod: 0,
            damage: "1d6",
          },
          {
            range: "2-4",
            text: "üíÄ –°—Ç–∞—è –∫—Ä—ã—Å –ø–æ–≤–∞–ª–∏–ª–∞ –≤–∞—Å! –ü–æ—Ç–µ—Ä—è–Ω–æ 2d4 HP –∏ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ.",
            success: false,
            xp_mod: 0.2,
            gold_mod: 0,
            damage: "2d4",
            effects: { charisma: -1, duration: 24 },
          },
          {
            range: "1",
            text: "‚ò†Ô∏è –ö–†–´–°–ò–ù–´–ô –ö–û–†–û–õ–¨ –ü–†–û–ë–£–î–ò–õ–°–Ø! –í—ã –µ–¥–≤–∞ –≤—ã–∂–∏–ª–∏, –ø–æ—Ç–µ—Ä—è–≤ 3d6 HP. –¢–∞–≤–µ—Ä–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∞ –Ω–∞ –∫–∞—Ä–∞–Ω—Ç–∏–Ω!",
            success: false,
            xp_mod: 0.1,
            gold_mod: 0,
            damage: "3d6",
            effects: { all_stats: -1, duration: 48 },
          },
        ],
      },
      {
        title: "–ù–∞–ø–∞–¥–µ–Ω–∏–µ –∫—Ä–∞–∫–µ–Ω–∞",
        description:
          "–ù–∞ –≤–∞—à –∫–æ—Ä–∞–±–ª—å –Ω–∞–ø–∞–ª –º–æ—Ä—Å–∫–æ–π –º–æ–Ω—Å—Ç—Ä! –ö–∏–Ω—å—Ç–µ 1d20 –¥–ª—è –±–∏—Ç–≤—ã!",
        difficulty: "hard",
        stat_check: "dexterity",
        xp_reward: 300,
        gold_reward: 200,
        results: [
          {
            range: "20",
            text: "‚öîÔ∏è –í—ã –ø—Ä–æ–Ω–∑–∏–ª–∏ –≥–ª–∞–∑ –∫—Ä–∞–∫–µ–Ω–∞ –≥–∞—Ä–ø—É–Ω–æ–º! –ú–æ–Ω—Å—Ç—Ä –æ—Ç—Å—Ç—É–ø–∞–µ—Ç, –æ—Å—Ç–∞–≤–∏–≤ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—É—é –∂–µ–º—á—É–∂–∏–Ω—É!",
            success: true,
            xp_mod: 2.0,
            gold_mod: 5.0,
            effects: { water_breathing: true, duration: 168 },
          },
          {
            range: "15-19",
            text: "üí™ –í—ã –æ—Ç—Ä—É–±–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —â—É–ø–∞–ª–µ—Ü. –ö–æ—Ä–∞–±–ª—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –Ω–æ —Ü–µ–ª!",
            success: true,
            xp_mod: 1.5,
            gold_mod: 2.0,
          },
          {
            range: "10-14",
            text: "üó°Ô∏è –©—É–ø–∞–ª—å—Ü–∞ —Ö–ª–µ—Å—Ç–Ω—É–ª–∏ –ø–æ –ø–∞–ª—É–±–µ. –í—ã –æ—Ç–±–∏–ª–∏—Å—å, –Ω–æ —Ä–∞–Ω–µ–Ω—ã (1d8 —É—Ä–æ–Ω–∞).",
            success: true,
            xp_mod: 1.0,
            gold_mod: 1.0,
            damage: "1d8",
          },
          {
            range: "5-9",
            text: "üí´ –ö—Ä–∞–∫–µ–Ω —É—Ç–∞—â–∏–ª –≤–∞—Å –ø–æ–¥ –≤–æ–¥—É! –í—ã –≤—ã–±—Ä–∞–ª–∏—Å—å, –Ω–æ –µ–¥–≤–∞ –Ω–µ —É—Ç–æ–Ω—É–ª–∏ (2d6 —É—Ä–æ–Ω–∞).",
            success: false,
            xp_mod: 0.5,
            gold_mod: 0,
            damage: "2d6",
            effects: { constitution: -2, duration: 72 },
          },
          {
            range: "2-4",
            text: "‚õìÔ∏è –©—É–ø–∞–ª—å—Ü–∞ —Å–ª–æ–º–∞–ª–∏ –≤–∞–º —Ä–µ–±—Ä–∞! 3d6 —É—Ä–æ–Ω–∞ –∏ -2 –∫ –õ–æ–≤–∫–æ—Å—Ç–∏ –Ω–∞ 3 –¥–Ω—è.",
            success: false,
            xp_mod: 0.2,
            gold_mod: 0,
            damage: "3d6",
            effects: { dexterity: -2, duration: 72 },
          },
          {
            range: "1",
            text: "üíÄ –ö–†–ê–ö–ï–ù –ü–û–ì–õ–û–¢–ò–õ –í–ê–°! –í—ã —á—É–¥–æ–º –≤—ã–∂–∏–ª–∏ –≤ –µ–≥–æ –∂–µ–ª—É–¥–∫–µ, –ø–æ—Ç–µ—Ä—è–≤ 4d8 HP –∏ –≤—Å—ë —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ!",
            success: false,
            xp_mod: 0.1,
            gold_mod: -1.0, // —Ç–µ—Ä—è–µ—Ç –≤—Å—ë –∑–æ–ª–æ—Ç–æ
            damage: "4d8",
            effects: { all_stats: -3, duration: 168 },
          },
        ],
      },
      {
        title: "–õ–æ–≥–æ–≤–æ –¥—Ä–∞–∫–æ–Ω–∞",
        description:
          "–í—ã –Ω–∞—à–ª–∏ —Å–ø—è—â–µ–≥–æ –¥—Ä–∞–∫–æ–Ω–∞ –∏ –µ–≥–æ —Å–æ–∫—Ä–æ–≤–∏—â–∞! –ö–∏–Ω—å—Ç–µ 1d20 –Ω–∞ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å!",
        difficulty: "legendary",
        stat_check: "dexterity",
        xp_reward: 1000,
        gold_reward: 1000,
        results: [
          {
            range: "20",
            text: "üèÜ –í—ã —É–∫—Ä–∞–ª–∏ —è–π—Ü–æ –¥—Ä–∞–∫–æ–Ω–∞! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü-–¥—Ä–∞–∫–æ–Ω—á–∏–∫!",
            success: true,
            xp_mod: 3.0,
            gold_mod: 10.0,
            effects: { dragon_pet: true, charisma: 5, duration: -1 },
          },
          {
            range: "15-19",
            text: "üíé –í—ã –Ω–∞–±–∏–ª–∏ –∫–∞—Ä–º–∞–Ω—ã –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ—Å—Ç—è–º–∏ –∏ —Ç–∏—Ö–æ —É—à–ª–∏!",
            success: true,
            xp_mod: 2.0,
            gold_mod: 5.0,
          },
          {
            range: "10-14",
            text: "üí∞ –°—Ö–≤–∞—Ç–∏–ª–∏ –∑–æ–ª–æ—Ç–æ, –Ω–æ –¥—Ä–∞–∫–æ–Ω –∑–∞—à–µ–≤–µ–ª–∏–ª—Å—è. –ü—Ä–∏—à–ª–æ—Å—å –±–µ–∂–∞—Ç—å!",
            success: true,
            xp_mod: 1.5,
            gold_mod: 2.0,
            effects: { speed: 2, duration: 24 },
          },
          {
            range: "5-9",
            text: "üî• –î—Ä–∞–∫–æ–Ω –ø—Ä–æ—Å–Ω—É–ª—Å—è! –í—ã —É–±–µ–∂–∞–ª–∏, –æ–±–æ–∂–∂–µ–Ω–Ω—ã–µ (2d10 –æ–≥–Ω–µ–Ω–Ω–æ–≥–æ —É—Ä–æ–Ω–∞).",
            success: false,
            xp_mod: 0.5,
            gold_mod: 0.5,
            damage: "2d10",
            effects: { fire_vulnerability: true, duration: 72 },
          },
          {
            range: "2-4",
            text: "üò± –î—Ä–∞–∫–æ–Ω –≤ —è—Ä–æ—Å—Ç–∏! –ü—Ä–µ—Å–ª–µ–¥–æ–≤–∞–ª –≤–∞—Å –¥–æ –≥–æ—Ä–æ–¥–∞ (3d10 —É—Ä–æ–Ω–∞ –∏ –ø—Ä–æ–∫–ª—è—Ç–∏–µ).",
            success: false,
            xp_mod: 0.2,
            gold_mod: 0,
            damage: "3d10",
            effects: { cursed: true, all_stats: -2, duration: 168 },
          },
          {
            range: "1",
            text: "‚ò†Ô∏è –í–´ –†–ê–ó–ë–£–î–ò–õ–ò –î–†–ï–í–ù–ï–ì–û! –ï–¥–≤–∞ –≤—ã–∂–∏–ª–∏, –ø–æ—Ç–µ—Ä—è–≤ 5d10 HP. –î—Ä–∞–∫–æ–Ω –æ–±—ä—è–≤–∏–ª –≤–∞—Å –ª–∏—á–Ω—ã–º –≤—Ä–∞–≥–æ–º!",
            success: false,
            xp_mod: 0.1,
            gold_mod: 0,
            damage: "5d10",
            effects: { dragon_enemy: true, all_stats: -5, duration: -1 },
          },
        ],
      },
    ];

    // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–≤–µ—Å—Ç—ã –∏ –∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    for (const quest of quests) {
  const result = await db.run(
    `
    INSERT INTO quests (title, description, difficulty, stat_check, xp_reward, gold_reward)
    VALUES (?, ?, ?, ?, ?, ?)
  `,
    [
      quest.title,
      quest.description,
      quest.difficulty,
      quest.stat_check,
      quest.xp_reward,
      quest.gold_reward,
    ]
  );

  // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  for (const questResult of quest.results) {
    await db.run(
      `
      INSERT INTO quest_results (
        quest_id, roll_range, result_text, is_success,
        xp_modifier, gold_modifier, effects, damage
      )
      VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `,
      [
        result.lastID,  // –ò—Å–ø–æ–ª—å–∑—É–µ–º lastID –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—Å—Ç–∞–≤–∫–∏
        questResult.range,
        questResult.text,
        questResult.success ? 1 : 0,
        questResult.xp_mod || 1.0,
        questResult.gold_mod || 1.0,
        questResult.effects ? JSON.stringify(questResult.effects) : null,
        questResult.damage || null,
      ]
    );
  }
}

    logDatabase(
      `–î–æ–±–∞–≤–ª–µ–Ω–æ ${quests.length} –±–∞–∑–æ–≤—ã—Ö –∫–≤–µ—Å—Ç–æ–≤ —Å –ø–æ–ª–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏`
    );
  }
}

module.exports = new DefaultQuestsMigration();
