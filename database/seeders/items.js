// database/seeders/items.js
// –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–∞–∑–æ–≤—ã–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏

const db = require('../index');

async function seedItems() {
  console.log('üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏...');

  // –†–∞—Å—Ö–æ–¥–Ω–∏–∫–∏
  const consumables = [
    // –û–±—ã—á–Ω—ã–µ
    {
      name: '–ú–∞–ª–æ–µ –∑–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è',
      description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–µ–±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è',
      type: 'consumable',
      rarity: 'common',
      effects: JSON.stringify({ hp: 20 }),
      value_gold: 25,
      weight: 0.5
    },
    {
      name: '–•–ª–µ–±',
      description: '–ü—Ä–æ—Å—Ç–∞—è –µ–¥–∞, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–µ–º–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è',
      type: 'consumable',
      rarity: 'common',
      effects: JSON.stringify({ hp: 10 }),
      value_gold: 5,
      weight: 0.2
    },
    {
      name: '–ë–∏–Ω—Ç—ã',
      description: '–ì—Ä—É–±—ã–µ –±–∏–Ω—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤—è–∑–∫–∏ —Ä–∞–Ω',
      type: 'consumable',
      rarity: 'common',
      effects: JSON.stringify({ hp: 15 }),
      value_gold: 10,
      weight: 0.1
    },
    
    // –ù–µ–æ–±—ã—á–Ω—ã–µ
    {
      name: '–ó–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è',
      description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è',
      type: 'consumable',
      rarity: 'uncommon',
      effects: JSON.stringify({ hp: 50 }),
      value_gold: 75,
      weight: 0.5
    },
    {
      name: '–ó–µ–ª—å–µ —Å–∏–ª—ã',
      description: '–í—Ä–µ–º–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∏–ª—É',
      type: 'consumable',
      rarity: 'uncommon',
      effects: JSON.stringify({ strength: 2, duration: 2 }),
      value_gold: 100,
      weight: 0.5
    },
    {
      name: '–ó–µ–ª—å–µ –ª–æ–≤–∫–æ—Å—Ç–∏',
      description: '–í—Ä–µ–º–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ª–æ–≤–∫–æ—Å—Ç—å',
      type: 'consumable',
      rarity: 'uncommon',
      effects: JSON.stringify({ dexterity: 2, duration: 2 }),
      value_gold: 100,
      weight: 0.5
    },
    {
      name: '–ü—Ä–æ—Ç–∏–≤–æ—è–¥–∏–µ',
      description: '–ò–∑–ª–µ—á–∏–≤–∞–µ—Ç –æ—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —è–¥–æ–≤',
      type: 'consumable',
      rarity: 'uncommon',
      effects: JSON.stringify({ cure_poison: true }),
      value_gold: 50,
      weight: 0.3
    },
    
    // –†–µ–¥–∫–∏–µ
    {
      name: '–ë–æ–ª—å—à–æ–µ –∑–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è',
      description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è',
      type: 'consumable',
      rarity: 'rare',
      effects: JSON.stringify({ hp: 100 }),
      value_gold: 200,
      weight: 0.5
    },
    {
      name: '–≠–ª–∏–∫—Å–∏—Ä –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏',
      description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ –≤—Ä–µ–º—è',
      type: 'consumable',
      rarity: 'rare',
      effects: JSON.stringify({ hp_max: 20, duration: 4 }),
      value_gold: 300,
      weight: 0.5
    },
    {
      name: '–ó–µ–ª—å–µ –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏',
      description: '–î–µ–ª–∞–µ—Ç –Ω–µ–≤–∏–¥–∏–º—ã–º –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è',
      type: 'consumable',
      rarity: 'rare',
      effects: JSON.stringify({ invisibility: 10 }),
      value_gold: 500,
      weight: 0.3
    }
  ];

  // –ë–∞–∑–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ
  const weapons = [
    // –û–±—ã—á–Ω–æ–µ
    {
      name: '–†–∂–∞–≤—ã–π –º–µ—á',
      description: '–°—Ç–∞—Ä—ã–π –º–µ—á, –ø–æ–∫—Ä—ã—Ç—ã–π —Ä–∂–∞–≤—á–∏–Ω–æ–π',
      type: 'weapon',
      rarity: 'common',
      slot_type: 'weapon_main',
      weapon_type: 'slash',
      stats_bonus: JSON.stringify({ damage: 0 }),
      value_gold: 10,
      weight: 3,
      is_two_handed: 0
    },
    {
      name: '–ü—Ä–æ—Å—Ç–æ–π –∫–∏–Ω–∂–∞–ª',
      description: '–ù–µ–±–æ–ª—å—à–æ–π –∫–∏–Ω–∂–∞–ª –¥–ª—è –±–ª–∏–∂–Ω–µ–≥–æ –±–æ—è',
      type: 'weapon',
      rarity: 'common',
      slot_type: 'weapon_main',
      weapon_type: 'pierce',
      stats_bonus: JSON.stringify({ damage: 0 }),
      value_gold: 5,
      weight: 1,
      is_two_handed: 0
    },
    {
      name: '–î—É–±–∏–Ω–∞',
      description: '–ì—Ä—É–±–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è –¥—É–±–∏–Ω–∞',
      type: 'weapon',
      rarity: 'common',
      slot_type: 'weapon_main',
      weapon_type: 'blunt',
      stats_bonus: JSON.stringify({ damage: 0 }),
      value_gold: 8,
      weight: 4,
      is_two_handed: 0
    },
    
    // –ù–µ–æ–±—ã—á–Ω–æ–µ
    {
      name: '–°—Ç–∞–ª—å–Ω–æ–π –º–µ—á',
      description: '–•–æ—Ä–æ—à–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞–ª—å–Ω–æ–π –º–µ—á',
      type: 'weapon',
      rarity: 'uncommon',
      slot_type: 'weapon_main',
      weapon_type: 'slash',
      stats_bonus: JSON.stringify({ damage: 2 }),
      value_gold: 50,
      weight: 3.5,
      is_two_handed: 0
    },
    {
      name: '–ë–æ–µ–≤–æ–π —Ç–æ–ø–æ—Ä',
      description: '–¢—è–∂–µ–ª—ã–π —Ç–æ–ø–æ—Ä –¥–ª—è —Ä—É–±—è—â–∏—Ö —É–¥–∞—Ä–æ–≤',
      type: 'weapon',
      rarity: 'uncommon',
      slot_type: 'weapon_main',
      weapon_type: 'slash',
      stats_bonus: JSON.stringify({ damage: 3 }),
      value_gold: 60,
      weight: 5,
      is_two_handed: 0
    },
    {
      name: '–ö–æ—Ä–æ—Ç–∫–∏–π –ª—É–∫',
      description: '–õ–µ–≥–∫–∏–π –ª—É–∫ –¥–ª—è —Å—Ç—Ä–µ–ª—å–±—ã –Ω–∞ —Å—Ä–µ–¥–Ω–∏–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏',
      type: 'weapon',
      rarity: 'uncommon',
      slot_type: 'weapon_main',
      weapon_type: 'ranged',
      stats_bonus: JSON.stringify({ damage: 1, dexterity: 1 }),
      value_gold: 75,
      weight: 2,
      is_two_handed: 1
    },
    
    // –†–µ–¥–∫–æ–µ
    {
      name: '–ü—ã–ª–∞—é—â–∏–π –º–µ—á',
      description: '–ú–µ—á, –ª–µ–∑–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Ö–≤–∞—á–µ–Ω–æ –º–∞–≥–∏—á–µ—Å–∫–∏–º –ø–ª–∞–º–µ–Ω–µ–º',
      type: 'weapon',
      rarity: 'rare',
      slot_type: 'weapon_main',
      weapon_type: 'slash',
      stats_bonus: JSON.stringify({ damage: 4, fire_damage: 2 }),
      requirements: JSON.stringify({ level: 5 }),
      value_gold: 300,
      weight: 3.5,
      is_two_handed: 0
    },
    {
      name: '–ú–æ—Ä–æ–∑–Ω—ã–π –∫–ª–∏–Ω–æ–∫',
      description: '–ö–ª–∏–Ω–æ–∫, –ø–æ–∫—Ä—ã—Ç—ã–π –≤–µ—á–Ω—ã–º –ª—å–¥–æ–º',
      type: 'weapon',
      rarity: 'rare',
      slot_type: 'weapon_main',
      weapon_type: 'slash',
      stats_bonus: JSON.stringify({ damage: 4, ice_damage: 2 }),
      requirements: JSON.stringify({ level: 5 }),
      value_gold: 300,
      weight: 3.5,
      is_two_handed: 0
    }
  ];

  // –ë–∞–∑–æ–≤–∞—è –±—Ä–æ–Ω—è
  const armors = [
    // –û–±—ã—á–Ω–∞—è
    {
      name: '–ü–æ—Ç—Ä–µ–ø–∞–Ω–Ω–∞—è –∫–æ–∂–∞–Ω–∞—è –±—Ä–æ–Ω—è',
      description: '–°—Ç–∞—Ä–∞—è –∫–æ–∂–∞–Ω–∞—è –±—Ä–æ–Ω—è —Å–æ —Å–ª–µ–¥–∞–º–∏ –∏–∑–Ω–æ—Å–∞',
      type: 'armor',
      rarity: 'common',
      slot_type: 'armor',
      armor_type: 'light',
      stats_bonus: JSON.stringify({ defense: 1 }),
      value_gold: 15,
      weight: 5
    },
    {
      name: '–¢–∫–∞–Ω–µ–≤–∞—è —Ä–æ–±–∞',
      description: '–ü—Ä–æ—Å—Ç–∞—è —Ä–æ–±–∞ –∏–∑ –≥—Ä—É–±–æ–π —Ç–∫–∞–Ω–∏',
      type: 'armor',
      rarity: 'common',
      slot_type: 'armor',
      armor_type: 'light',
      stats_bonus: JSON.stringify({ defense: 0, intelligence: 1 }),
      value_gold: 10,
      weight: 2
    },
    
    // –ù–µ–æ–±—ã—á–Ω–∞—è
    {
      name: '–£–∫—Ä–µ–ø–ª–µ–Ω–Ω–∞—è –∫–æ–∂–∞–Ω–∞—è –±—Ä–æ–Ω—è',
      description: '–ö–æ–∂–∞–Ω–∞—è –±—Ä–æ–Ω—è —Å –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–∫–ª–µ–ø–∫–∞–º–∏',
      type: 'armor',
      rarity: 'uncommon',
      slot_type: 'armor',
      armor_type: 'light',
      stats_bonus: JSON.stringify({ defense: 3 }),
      value_gold: 75,
      weight: 8
    },
    {
      name: '–ö–æ–ª—å—á—É–≥–∞',
      description: '–ë—Ä–æ–Ω—è –∏–∑ –ø–µ—Ä–µ–ø–ª–µ—Ç–µ–Ω–Ω—ã—Ö –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –∫–æ–ª–µ—Ü',
      type: 'armor',
      rarity: 'uncommon',
      slot_type: 'armor',
      armor_type: 'medium',
      stats_bonus: JSON.stringify({ defense: 5 }),
      requirements: JSON.stringify({ strength: 12 }),
      value_gold: 150,
      weight: 20
    },
    
    // –†–µ–¥–∫–∞—è
    {
      name: '–ß–µ—à—É–π—á–∞—Ç–∞—è –±—Ä–æ–Ω—è –¥—Ä–∞–∫–æ–Ω–∞',
      description: '–ë—Ä–æ–Ω—è, —Å–¥–µ–ª–∞–Ω–Ω–∞—è –∏–∑ —á–µ—à—É–∏ –¥—Ä–∞–∫–æ–Ω–∞',
      type: 'armor',
      rarity: 'rare',
      slot_type: 'armor',
      armor_type: 'medium',
      stats_bonus: JSON.stringify({ defense: 7, fire_resistance: 25 }),
      requirements: JSON.stringify({ level: 6, strength: 14 }),
      value_gold: 500,
      weight: 25
    }
  ];

  // –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã
  const accessories = [
    // –©–∏—Ç—ã
    {
      name: '–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π —â–∏—Ç',
      description: '–ü—Ä–æ—Å—Ç–æ–π —â–∏—Ç –∏–∑ –¥–µ—Ä–µ–≤–∞',
      type: 'shield',
      rarity: 'common',
      slot_type: 'weapon_off',
      stats_bonus: JSON.stringify({ defense: 2, block_chance: 10 }),
      value_gold: 20,
      weight: 5
    },
    {
      name: '–ñ–µ–ª–µ–∑–Ω—ã–π —â–∏—Ç',
      description: '–ü—Ä–æ—á–Ω—ã–π —â–∏—Ç –∏–∑ –∂–µ–ª–µ–∑–∞',
      type: 'shield',
      rarity: 'uncommon',
      slot_type: 'weapon_off',
      stats_bonus: JSON.stringify({ defense: 4, block_chance: 15 }),
      value_gold: 100,
      weight: 10
    },
    
    // –ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã
    {
      name: '–ö–æ–∂–∞–Ω—ã–π –∫–∞–ø—é—à–æ–Ω',
      description: '–ö–∞–ø—é—à–æ–Ω –∏–∑ –º—è–≥–∫–æ–π –∫–æ–∂–∏',
      type: 'accessory',
      rarity: 'common',
      slot_type: 'head',
      stats_bonus: JSON.stringify({ defense: 1 }),
      value_gold: 10,
      weight: 0.5
    },
    {
      name: '–ñ–µ–ª–µ–∑–Ω—ã–π —à–ª–µ–º',
      description: '–ü—Ä–æ—Å—Ç–æ–π —à–ª–µ–º –∏–∑ –∂–µ–ª–µ–∑–∞',
      type: 'accessory',
      rarity: 'uncommon',
      slot_type: 'head',
      stats_bonus: JSON.stringify({ defense: 2 }),
      value_gold: 50,
      weight: 3
    },
    {
      name: '–ö–æ–ª–ø–∞–∫ –º–∞–≥–∞',
      description: '–û—Å—Ç—Ä–æ–∫–æ–Ω–µ—á–Ω—ã–π –∫–æ–ª–ø–∞–∫, —É—Å–∏–ª–∏–≤–∞—é—â–∏–π –º–∞–≥–∏—é',
      type: 'accessory',
      rarity: 'uncommon',
      slot_type: 'head',
      stats_bonus: JSON.stringify({ intelligence: 2, wisdom: 1 }),
      value_gold: 75,
      weight: 0.3
    },
    
    // –ü–µ—Ä—á–∞—Ç–∫–∏
    {
      name: '–ö–æ–∂–∞–Ω—ã–µ –ø–µ—Ä—á–∞—Ç–∫–∏',
      description: '–ü—Ä–æ—Å—Ç—ã–µ –ø–µ—Ä—á–∞—Ç–∫–∏ –∏–∑ –∫–æ–∂–∏',
      type: 'accessory',
      rarity: 'common',
      slot_type: 'gloves',
      stats_bonus: JSON.stringify({ dexterity: 1 }),
      value_gold: 15,
      weight: 0.2
    },
    {
      name: '–ü–µ—Ä—á–∞—Ç–∫–∏ —Å–∏–ª—ã',
      description: '–ó–∞—á–∞—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä—á–∞—Ç–∫–∏, —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–µ —Å–∏–ª—É',
      type: 'accessory',
      rarity: 'rare',
      slot_type: 'gloves',
      stats_bonus: JSON.stringify({ strength: 3 }),
      value_gold: 200,
      weight: 0.5
    },
    
    // –°–∞–ø–æ–≥–∏
    {
      name: '–ö–æ–∂–∞–Ω—ã–µ —Å–∞–ø–æ–≥–∏',
      description: '–£–¥–æ–±–Ω—ã–µ —Å–∞–ø–æ–≥–∏ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π',
      type: 'accessory',
      rarity: 'common',
      slot_type: 'boots',
      stats_bonus: JSON.stringify({ dexterity: 1 }),
      value_gold: 20,
      weight: 1
    },
    {
      name: '–°–∞–ø–æ–≥–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏',
      description: '–õ–µ–≥–∫–∏–µ —Å–∞–ø–æ–≥–∏, —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–µ —Å–∫–æ—Ä–æ—Å—Ç—å',
      type: 'accessory',
      rarity: 'uncommon',
      slot_type: 'boots',
      stats_bonus: JSON.stringify({ dexterity: 2 }),
      value_gold: 100,
      weight: 0.8
    },
    
    // –ü–ª–∞—â–∏
    {
      name: '–î–æ—Ä–æ–∂–Ω—ã–π –ø–ª–∞—â',
      description: '–ü–ª–æ—Ç–Ω—ã–π –ø–ª–∞—â –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –Ω–µ–ø–æ–≥–æ–¥—ã',
      type: 'accessory',
      rarity: 'common',
      slot_type: 'cloak',
      stats_bonus: JSON.stringify({ defense: 1 }),
      value_gold: 15,
      weight: 2
    },
    {
      name: '–ü–ª–∞—â –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏',
      description: '–ú–∞–≥–∏—á–µ—Å–∫–∏–π –ø–ª–∞—â, —Å–∫—Ä—ã–≤–∞—é—â–∏–π –≤–ª–∞–¥–µ–ª—å—Ü–∞',
      type: 'accessory',
      rarity: 'rare',
      slot_type: 'cloak',
      stats_bonus: JSON.stringify({ dexterity: 2, stealth: 20 }),
      requirements: JSON.stringify({ level: 5 }),
      value_gold: 400,
      weight: 1
    },
    
    // –°—É–º–∫–∏
    {
      name: '–•–æ–ª—â–æ–≤–∞—è —Å—É–º–∫–∞',
      description: '–ü—Ä–æ—Å—Ç–∞—è —Å—É–º–∫–∞ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∫–∏ –≤–µ—â–µ–π',
      type: 'accessory',
      rarity: 'common',
      slot_type: 'bag',
      stats_bonus: JSON.stringify({ carry_capacity: 20 }),
      value_gold: 25,
      weight: 1
    },
    {
      name: '–†—é–∫–∑–∞–∫ –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞',
      description: '–í–º–µ—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Ä—é–∫–∑–∞–∫ –¥–ª—è –¥–∞–ª—å–Ω–∏—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π',
      type: 'accessory',
      rarity: 'uncommon',
      slot_type: 'bag',
      stats_bonus: JSON.stringify({ carry_capacity: 50 }),
      value_gold: 100,
      weight: 2
    }
  ];

  // –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ)
  const legendaryItems = [
    {
      name: '–≠–∫—Å–∫–∞–ª–∏–±—É—Ä',
      description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –º–µ—á –∫–æ—Ä–æ–ª—è –ê—Ä—Ç—É—Ä–∞, —Å–∏—è—é—â–∏–π –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —Å–≤–µ—Ç–æ–º',
      type: 'weapon',
      rarity: 'legendary',
      slot_type: 'weapon_main',
      weapon_type: 'slash',
      stats_bonus: JSON.stringify({ 
        damage: 10, 
        all_stats: 2, 
        holy_damage: 5,
        leadership: true 
      }),
      requirements: JSON.stringify({ level: 10, alignment: 'good' }),
      value_gold: 10000,
      weight: 4,
      is_two_handed: 0,
      is_unique: 1
    },
    {
      name: '–ü–æ—Å–æ—Ö –ê—Ä—Ö–∏–º–∞–≥–∞',
      description: '–î—Ä–µ–≤–Ω–∏–π –ø–æ—Å–æ—Ö –ø–µ—Ä–≤–æ–≥–æ –∞—Ä—Ö–∏–º–∞–≥–∞, –ø—É–ª—å—Å–∏—Ä—É—é—â–∏–π —á–∏—Å—Ç–æ–π –º–∞–≥–∏—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π',
      type: 'weapon',
      rarity: 'legendary',
      slot_type: 'weapon_main',
      weapon_type: 'magic',
      stats_bonus: JSON.stringify({ 
        damage: 5,
        intelligence: 5,
        wisdom: 5,
        mp_max: 100,
        spell_power: 50
      }),
      requirements: JSON.stringify({ level: 10, class: 'MAGE' }),
      value_gold: 15000,
      weight: 3,
      is_two_handed: 1,
      is_unique: 1
    },
    {
      name: '–ë—Ä–æ–Ω—è –ù–µ–ø–æ–±–µ–¥–∏–º–æ–≥–æ',
      description: '–ú–∏—Ñ–∏—á–µ—Å–∫–∞—è –±—Ä–æ–Ω—è, –≤—ã–∫–æ–≤–∞–Ω–Ω–∞—è –±–æ–≥–∞–º–∏ –¥–ª—è –∑–∞—â–∏—Ç—ã –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –≥–µ—Ä–æ—è',
      type: 'armor',
      rarity: 'legendary',
      slot_type: 'armor',
      armor_type: 'heavy',
      stats_bonus: JSON.stringify({ 
        defense: 15,
        all_stats: 3,
        damage_reduction: 5,
        immunity: 'critical'
      }),
      requirements: JSON.stringify({ level: 10, strength: 18 }),
      value_gold: 20000,
      weight: 30,
      is_unique: 1
    },
    {
      name: '–ö–æ–ª—å—Ü–æ –í—Å–µ–≤–ª–∞—Å—Ç–∏—è',
      description: '–ï–¥–∏–Ω–æ–µ –∫–æ–ª—å—Ü–æ, —Å–ø–æ—Å–æ–±–Ω–æ–µ –ø–æ–¥—á–∏–Ω—è—Ç—å –≤–æ–ª—é –¥—Ä—É–≥–∏—Ö',
      type: 'accessory',
      rarity: 'legendary',
      slot_type: 'ring',
      stats_bonus: JSON.stringify({ 
        all_stats: 5,
        invisibility: true,
        corruption: 1
      }),
      requirements: JSON.stringify({ level: 8 }),
      value_gold: 50000,
      weight: 0.1,
      is_unique: 1
    }
  ];

  // –í—Å—Ç–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã
  const allItems = [
    ...consumables,
    ...weapons,
    ...armors,
    ...accessories,
    ...legendaryItems
  ];

  let inserted = 0;
  
  for (const item of allItems) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
      const existing = await db.get(
        'SELECT id FROM items WHERE name = ?',
        [item.name]
      );
      
      if (!existing) {
        await db.run(
          `INSERT INTO items (
            name, description, type, rarity, effects, requirements, 
            value_gold, slot_type, weight, is_two_handed, weapon_type, 
            armor_type, stats_bonus, is_unique
          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,
          [
            item.name,
            item.description,
            item.type,
            item.rarity,
            item.effects || null,
            item.requirements || null,
            item.value_gold,
            item.slot_type || null,
            item.weight || 0,
            item.is_two_handed || 0,
            item.weapon_type || null,
            item.armor_type || null,
            item.stats_bonus || null,
            item.is_unique || 0
          ]
        );
        inserted++;
      }
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –ø—Ä–µ–¥–º–µ—Ç–∞ ${item.name}:`, error.message);
    }
  }

  console.log(`‚úÖ –í—Å—Ç–∞–≤–ª–µ–Ω–æ ${inserted} –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);

  // –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å —Ç–æ—Ä–≥–æ–≤—Ü–∞ –±–∞–∑–æ–≤—ã–º–∏ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏
  const merchant = await db.get('SELECT id FROM merchants WHERE id = 1');
  if (merchant) {
    console.log('üè™ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è —Ç–æ—Ä–≥–æ–≤—Ü–∞...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏ –æ–±—ã—á–Ω–æ–π –∏ –Ω–µ–æ–±—ã—á–Ω–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏
    const shopItems = await db.all(
      `SELECT id FROM items 
       WHERE type = 'consumable' AND rarity IN ('common', 'uncommon')
       AND id NOT IN (SELECT item_id FROM merchant_inventory WHERE merchant_id = 1)`
    );
    
    for (const item of shopItems) {
      await db.run(
        'INSERT INTO merchant_inventory (merchant_id, item_id, quantity) VALUES (?, ?, ?)',
        [1, item.id, -1] // -1 = –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      );
    }
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${shopItems.length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω`);
  }
}

// –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  seedItems()
    .then(() => {
      console.log('‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
      process.exit(0);
    })
    .catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = seedItems;